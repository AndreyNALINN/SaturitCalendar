name: Add PWA Support

on:
  workflow_dispatch: # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

jobs:
  add-pwa:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Create manifest.json
      run: |
        cat > manifest.json << 'EOF'
        {
          "name": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–∏–≥–∞–¥–∞–º–∏ –∏ —Å–∫–ª–∞–¥–æ–º",
          "short_name": "–ë—Ä–∏–≥–∞–¥—ã",
          "description": "–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—Ä–∏–≥–∞–¥–∞–º–∏, —Å–∫–ª–∞–¥–æ–º –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç",
          "start_url": "/",
          "display": "standalone",
          "background_color": "#667eea",
          "theme_color": "#667eea",
          "orientation": "portrait-primary",
          "icons": [
            {
              "src": "icon-192.png",
              "sizes": "192x192",
              "type": "image/png",
              "purpose": "maskable any"
            },
            {
              "src": "icon-512.png", 
              "sizes": "512x512",
              "type": "image/png",
              "purpose": "maskable any"
            }
          ]
        }
        EOF
        
    - name: Create service worker
      run: |
        cat > sw.js << 'EOF'
        const CACHE_NAME = 'brigades-app-v1.0.0';
        const STATIC_CACHE_URLS = ['/', '/index.html', '/manifest.json'];
        
        self.addEventListener('install', event => {
          event.waitUntil(
            caches.open(CACHE_NAME)
              .then(cache => cache.addAll(STATIC_CACHE_URLS))
              .then(() => self.skipWaiting())
          );
        });
        
        self.addEventListener('activate', event => {
          event.waitUntil(
            caches.keys().then(cacheNames => {
              return Promise.all(
                cacheNames.map(cacheName => {
                  if (cacheName !== CACHE_NAME) {
                    return caches.delete(cacheName);
                  }
                })
              );
            }).then(() => self.clients.claim())
          );
        });
        
        self.addEventListener('fetch', event => {
          if (event.request.method !== 'GET') return;
          
          event.respondWith(
            caches.match(event.request)
              .then(cachedResponse => {
                if (cachedResponse) return cachedResponse;
                
                return fetch(event.request)
                  .then(response => {
                    if (!response || response.status !== 200) return response;
                    
                    const responseToCache = response.clone();
                    caches.open(CACHE_NAME)
                      .then(cache => cache.put(event.request, responseToCache));
                    
                    return response;
                  })
                  .catch(() => caches.match('/'));
              })
          );
        });
        EOF
        
    - name: Create default icons
      run: |
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∏–∫–æ–Ω–∫–∏
        echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==" | base64 -d > temp.png
        convert temp.png -resize 192x192 -background "#667eea" -gravity center icon-192.png 2>/dev/null || curl -s "https://via.placeholder.com/192x192/667eea/ffffff.png?text=üì±" -o icon-192.png
        convert temp.png -resize 512x512 -background "#667eea" -gravity center icon-512.png 2>/dev/null || curl -s "https://via.placeholder.com/512x512/667eea/ffffff.png?text=üì±" -o icon-512.png
        rm -f temp.png
        
    - name: Modify HTML for PWA
      run: |
        # –î–æ–±–∞–≤–ª—è–µ–º PWA –º–µ—Ç–∞-—Ç–µ–≥–∏ –≤ head
        if grep -q "manifest.json" index.html; then
          echo "PWA meta tags already exist"
        else
          sed -i '/<title>/a \
        <!-- PWA Meta tags -->\
        <meta name="apple-mobile-web-app-capable" content="yes">\
        <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">\
        <meta name="apple-mobile-web-app-title" content="–ë—Ä–∏–≥–∞–¥—ã">\
        <meta name="mobile-web-app-capable" content="yes">\
        <meta name="msapplication-TileColor" content="#667eea">\
        <link rel="manifest" href="manifest.json">\
        <link rel="apple-touch-icon" sizes="192x192" href="icon-192.png">' index.html
        fi
        
        # –î–æ–±–∞–≤–ª—è–µ–º PWA JavaScript –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º </body>
        if grep -q "initializePWA" index.html; then
          echo "PWA JavaScript already exists"
        else
          sed -i '/<\/body>/i \
        <script>\
        // PWA –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è\
        function initializePWA() {\
            if ("serviceWorker" in navigator) {\
                navigator.serviceWorker.register("/sw.js")\
                    .then(registration => console.log("SW –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:", registration))\
                    .catch(error => console.log("SW –æ—à–∏–±–∫–∞:", error));\
            }\
            \
            let deferredPrompt;\
            window.addEventListener("beforeinstallprompt", (e) => {\
                e.preventDefault();\
                deferredPrompt = e;\
                \
                const installBtn = document.createElement("button");\
                installBtn.textContent = "üì± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ";\
                installBtn.id = "pwa-install-btn";\
                installBtn.style.cssText = "position: fixed; bottom: 90px; right: 20px; z-index: 1000; background: #28a745; color: white; border: none; padding: 12px 16px; border-radius: 8px; cursor: pointer; font-size: 14px; box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);";\
                \
                installBtn.onclick = async () => {\
                    if (deferredPrompt) {\
                        deferredPrompt.prompt();\
                        const { outcome } = await deferredPrompt.userChoice;\
                        console.log("–£—Å—Ç–∞–Ω–æ–≤–∫–∞:", outcome);\
                        deferredPrompt = null;\
                        installBtn.remove();\
                    }\
                };\
                \
                document.body.appendChild(installBtn);\
            });\
            \
            window.addEventListener("appinstalled", () => {\
                console.log("PWA —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!");\
                const installBtn = document.getElementById("pwa-install-btn");\
                if (installBtn) installBtn.remove();\
            });\
        }\
        \
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM\
        if (document.readyState === "loading") {\
            document.addEventListener("DOMContentLoaded", initializePWA);\
        } else {\
            initializePWA();\
        }\
        </script>' index.html
        fi
        
    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action PWA"
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "üöÄ Add PWA support: manifest, service worker, icons, install button"
          git push
        fi
